{"name":"Marypopin","tagline":"Category to display modal-like view controllers with more options","body":"MaryPopin\r\n=========\r\n\r\nMaryPopin is a category on UIViewController to present modal like controller with more flexibility.\r\n\r\n*- Wait, what? There are tons of similar projects on the web to do that!*\r\n\r\nWell, your are right, but here are some strengths of this project :\r\n\r\n* No subclassing is required, you can use it on your existing view controllers like you do with modal controllers,\r\n* No `UIWindow` manipulation, MaryPopin uses `UIViewControllers` containment, so rotation is properly handled,\r\n* Auto-dismiss when touching outside of the popin\r\n* Controller presentation size can be customized\r\n* Larger choice of transition styles and directions\r\n* Subtle paralax effect to fit well with iOS 7 guidelines\r\n* Automatic moves to respond to keyboard events\r\n* Completion blocks on present and dismiss transitions\r\n\r\nYes, you can say it, it is Supercalifragilisticexpialidocious!\r\n\r\n*- Okay. But why MaryPopin?*\r\nPopin, popup, modal may look similar, but in reality, there are some slight differences. Here, the controller view is presented inside its parent controller \r\nthat is why we name it a popin controller. And as it is implemented as a category, it is as nice and magic as the famous nanny.\r\n\r\n![MaryPopin demo](https://github.com/Backelite/MaryPopin/raw/master/MaryPopin.gif \"Sample project animation\")\r\n\r\n=========\r\n\r\n## Changes\r\n\r\nv 1.0\r\n\r\n* First public release\r\n\r\n## Getting started\r\n### The Pod way\r\nJust add the following line in your podfile\r\n\r\n\tpod 'MaryPopin'\r\n\r\n### The old school way\r\nDrag and drop the category files in your project and you are done.\r\n\r\n### Using MaryPopin\r\n\r\n#### Basic usage\r\n\r\nFirst, import `UIViewController+MaryPopin.h` header.\r\n\r\nIn your current view controller, you can create a view controller and present it as a popin.\r\n\r\n```Objective-C\r\n\r\n\t//Create the popin view controller\r\n\tUIViewController *popin = [[UIViewController alloc] initWithNibName:@\"NibName\" bundle:@\"Bundle\"];\r\n\t//Customize transition if needed\r\n\t    [popin setPopinTransitionStyle:BKTPopinTransitionStyleSlide];\r\n\t    \r\n\t\t//Add options\r\n\t\t[popin setPopinOptions:BKTPopinDisableAutoDismiss];\r\n\t\t\r\n\t\t//Customize transition direction if needed\r\n\t    [popin setPopinTransitionDirection:BKTPopinTransitionDirectionTop];\r\n\t\t\r\n\t\t//Present popin on the desired controller\r\n\t\t//Note that if you are using a UINavigationController, the navigation bar will be active if you present\r\n\t\t// the popin on the visible controller instead of presenting it on the navigation controller\r\n\t    [self presentPopinController:popin animated:YES completion:^{\r\n\t        NSLog(@\"Popin presented !\");\r\n\t    }];\r\n```\r\n\r\nRespectively, to dismiss the popin from your current view controller\r\n\r\n```Objective-C\r\n\r\n\t[self dismissCurrentPopinControllerAnimated:YES completion:^{\r\n        NSLog(@\"Popin dismissed !\");\r\n    }];\r\n```\r\n#### Advanced usage\r\nTodo.\r\n\r\n### Sample project\r\nThe sample project show how to present and dismiss a popin with different transition styles.\r\n\r\n## <a name=\"requirements\"></a> Requirements\r\nMaryPopin requires iOS 7.0 and Xcode 5 as it uses UIKit Dynamics and motion effects.\r\n\r\n### ARC\r\nMaryPopin uses ARC.  \r\nIf you are using MaryPopin in a non-arc project, you will need to set a `-fobjc-arc` compiler flag on every MaryPopin source files.  \r\nTo set a compiler flag in Xcode, go to your active target and select the \"Build Phases\" tab. Then select MaryPopin source files, press Enter, insert -fobjc-arc and then \"Done\" to enable ARC for MaryPopin.\r\n\r\n## Contributing\r\nIf you want to contribute to this project, please submit a pull request. \r\n\r\n## Licence\r\nMaryPopin is available under the MIT license. See the LICENSE file for more info.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}